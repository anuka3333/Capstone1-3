{"ast":null,"code":"import api from'../api';/**\n * Fetch clients from the backend.\n * If a token is provided it will be sent in the Authorization header.\n * Uses the configured API base if present, otherwise falls back to http://127.0.0.1:5000\n *\n * @param {{ token?: string }} options\n * @returns {Promise<any>} response data\n */export async function fetchClients(){let{token}=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};const headers={};if(token)headers.Authorization=`Bearer ${token}`;// Prefer configured API base\ntry{const base=(process.env.REACT_APP_API_URL||'').trim();if(base){const res=await api.get('/clients',{headers});return res.data;}// fallback to explicit URL\nconst res=await fetch('http://127.0.0.1:5000/clients',{headers:{...headers}});if(!res.ok)throw new Error(`Fetch failed: ${res.status} ${res.statusText}`);return await res.json();}catch(err){// bubble error with a helpful message\nthrow new Error(`fetchClients error: ${err.message}`);}}export default fetchClients;","map":{"version":3,"names":["api","fetchClients","token","arguments","length","undefined","headers","Authorization","base","process","env","REACT_APP_API_URL","trim","res","get","data","fetch","ok","Error","status","statusText","json","err","message"],"sources":["/Users/anukherlen/capstone1-3/src/utils/clients.js"],"sourcesContent":["import api from '../api';\n\n/**\n * Fetch clients from the backend.\n * If a token is provided it will be sent in the Authorization header.\n * Uses the configured API base if present, otherwise falls back to http://127.0.0.1:5000\n *\n * @param {{ token?: string }} options\n * @returns {Promise<any>} response data\n */\nexport async function fetchClients({ token } = {}) {\n  const headers = {};\n  if (token) headers.Authorization = `Bearer ${token}`;\n\n  // Prefer configured API base\n  try {\n    const base = (process.env.REACT_APP_API_URL || '').trim();\n    if (base) {\n      const res = await api.get('/clients', { headers });\n      return res.data;\n    }\n\n    // fallback to explicit URL\n    const res = await fetch('http://127.0.0.1:5000/clients', { headers: { ...headers } });\n    if (!res.ok) throw new Error(`Fetch failed: ${res.status} ${res.statusText}`);\n    return await res.json();\n  } catch (err) {\n    // bubble error with a helpful message\n    throw new Error(`fetchClients error: ${err.message}`);\n  }\n}\n\nexport default fetchClients;\n"],"mappings":"AAAA,MAAO,CAAAA,GAAG,KAAM,QAAQ,CAExB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GACA,MAAO,eAAe,CAAAC,YAAYA,CAAA,CAAiB,IAAhB,CAAEC,KAAM,CAAC,CAAAC,SAAA,CAAAC,MAAA,IAAAD,SAAA,MAAAE,SAAA,CAAAF,SAAA,IAAG,CAAC,CAAC,CAC/C,KAAM,CAAAG,OAAO,CAAG,CAAC,CAAC,CAClB,GAAIJ,KAAK,CAAEI,OAAO,CAACC,aAAa,CAAG,UAAUL,KAAK,EAAE,CAEpD;AACA,GAAI,CACF,KAAM,CAAAM,IAAI,CAAG,CAACC,OAAO,CAACC,GAAG,CAACC,iBAAiB,EAAI,EAAE,EAAEC,IAAI,CAAC,CAAC,CACzD,GAAIJ,IAAI,CAAE,CACR,KAAM,CAAAK,GAAG,CAAG,KAAM,CAAAb,GAAG,CAACc,GAAG,CAAC,UAAU,CAAE,CAAER,OAAQ,CAAC,CAAC,CAClD,MAAO,CAAAO,GAAG,CAACE,IAAI,CACjB,CAEA;AACA,KAAM,CAAAF,GAAG,CAAG,KAAM,CAAAG,KAAK,CAAC,+BAA+B,CAAE,CAAEV,OAAO,CAAE,CAAE,GAAGA,OAAQ,CAAE,CAAC,CAAC,CACrF,GAAI,CAACO,GAAG,CAACI,EAAE,CAAE,KAAM,IAAI,CAAAC,KAAK,CAAC,iBAAiBL,GAAG,CAACM,MAAM,IAAIN,GAAG,CAACO,UAAU,EAAE,CAAC,CAC7E,MAAO,MAAM,CAAAP,GAAG,CAACQ,IAAI,CAAC,CAAC,CACzB,CAAE,MAAOC,GAAG,CAAE,CACZ;AACA,KAAM,IAAI,CAAAJ,KAAK,CAAC,uBAAuBI,GAAG,CAACC,OAAO,EAAE,CAAC,CACvD,CACF,CAEA,cAAe,CAAAtB,YAAY","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}