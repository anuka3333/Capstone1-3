{"ast":null,"code":"var _jsxFileName = \"/Users/anukherlen/capstone1-3/src/components/Albums.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useAuth0 } from '@auth0/auth0-react';\nimport api from '../api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CreateAlbumWithPhotos = () => {\n  _s();\n  const {\n    getAccessTokenSilently\n  } = useAuth0();\n  const [albumName, setAlbumName] = useState('');\n  const [selectedFiles, setSelectedFiles] = useState([]);\n  const [uploading, setUploading] = useState(false);\n  const [message, setMessage] = useState('');\n  const handleAlbumNameChange = e => {\n    setAlbumName(e.target.value);\n  };\n  const handleFileChange = e => {\n    setSelectedFiles(Array.from(e.target.files));\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!albumName.trim()) {\n      setMessage('Please enter an album name.');\n      return;\n    }\n    if (selectedFiles.length === 0) {\n      setMessage('Please select at least one photo.');\n      return;\n    }\n    setUploading(true);\n    setMessage('');\n    try {\n      const token = await getAccessTokenSilently({\n        audience: process.env.REACT_APP_AUTH0_AUDIENCE\n      });\n\n      // Create the album first\n      const albumResponse = await api.post('/api/albums', {\n        name: albumName\n      }, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      const albumId = albumResponse.data.id || albumResponse.data._id;\n\n      // Upload each photo to the album\n      for (const file of selectedFiles) {\n        const formData = new FormData();\n        formData.append('photo', file);\n        await api.post(`/api/albums/${albumId}/photos`, formData, {\n          headers: {\n            Authorization: `Bearer ${token}`,\n            'Content-Type': 'multipart/form-data'\n          }\n        });\n      }\n      setMessage('Album and photos uploaded successfully!');\n      setAlbumName('');\n      setSelectedFiles([]);\n    } catch (error) {\n      console.error('Error creating album and uploading photos:', error);\n      setMessage('Failed to create album or upload photos. Please try again.');\n    } finally {\n      setUploading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: '20px',\n      border: '1px solid #ccc',\n      borderRadius: '8px',\n      maxWidth: '500px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Create New Album with Photos\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginBottom: '10px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"albumName\",\n          children: \"Album Name:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 57\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"albumName\",\n          value: albumName,\n          onChange: handleAlbumNameChange,\n          disabled: uploading,\n          style: {\n            width: '100%',\n            padding: '8px',\n            boxSizing: 'border-box'\n          },\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginBottom: '10px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"photos\",\n          children: \"Select Photos:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 57\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          id: \"photos\",\n          multiple: true,\n          accept: \"image/*\",\n          onChange: handleFileChange,\n          disabled: uploading,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        disabled: uploading,\n        style: {\n          padding: '10px 20px'\n        },\n        children: uploading ? 'Uploading...' : 'Create Album'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        marginTop: '10px'\n      },\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 19\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n};\n_s(CreateAlbumWithPhotos, \"EMAyYwA1JhaDIm1/Fq26h+leum8=\", false, function () {\n  return [useAuth0];\n});\n_c = CreateAlbumWithPhotos;\nexport default CreateAlbumWithPhotos;\nvar _c;\n$RefreshReg$(_c, \"CreateAlbumWithPhotos\");","map":{"version":3,"names":["React","useState","useAuth0","api","jsxDEV","_jsxDEV","CreateAlbumWithPhotos","_s","getAccessTokenSilently","albumName","setAlbumName","selectedFiles","setSelectedFiles","uploading","setUploading","message","setMessage","handleAlbumNameChange","e","target","value","handleFileChange","Array","from","files","handleSubmit","preventDefault","trim","length","token","audience","process","env","REACT_APP_AUTH0_AUDIENCE","albumResponse","post","name","headers","Authorization","albumId","data","id","_id","file","formData","FormData","append","error","console","style","padding","border","borderRadius","maxWidth","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","marginBottom","htmlFor","type","onChange","disabled","width","boxSizing","required","multiple","accept","marginTop","_c","$RefreshReg$"],"sources":["/Users/anukherlen/capstone1-3/src/components/Albums.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { useAuth0 } from '@auth0/auth0-react';\nimport api from '../api';\n\nconst CreateAlbumWithPhotos = () => {\n  const { getAccessTokenSilently } = useAuth0();\n  const [albumName, setAlbumName] = useState('');\n  const [selectedFiles, setSelectedFiles] = useState([]);\n  const [uploading, setUploading] = useState(false);\n  const [message, setMessage] = useState('');\n\n  const handleAlbumNameChange = (e) => {\n    setAlbumName(e.target.value);\n  };\n\n  const handleFileChange = (e) => {\n    setSelectedFiles(Array.from(e.target.files));\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    if (!albumName.trim()) {\n      setMessage('Please enter an album name.');\n      return;\n    }\n    if (selectedFiles.length === 0) {\n      setMessage('Please select at least one photo.');\n      return;\n    }\n\n    setUploading(true);\n    setMessage('');\n\n    try {\n      const token = await getAccessTokenSilently({ audience: process.env.REACT_APP_AUTH0_AUDIENCE });\n\n      // Create the album first\n      const albumResponse = await api.post('/api/albums', { name: albumName }, {\n        headers: {\n          Authorization: `Bearer ${token}`,\n        },\n      });\n      const albumId = albumResponse.data.id || albumResponse.data._id;\n\n      // Upload each photo to the album\n      for (const file of selectedFiles) {\n        const formData = new FormData();\n        formData.append('photo', file);\n        await api.post(`/api/albums/${albumId}/photos`, formData, {\n          headers: {\n            Authorization: `Bearer ${token}`,\n            'Content-Type': 'multipart/form-data',\n          },\n        });\n      }\n\n      setMessage('Album and photos uploaded successfully!');\n      setAlbumName('');\n      setSelectedFiles([]);\n    } catch (error) {\n      console.error('Error creating album and uploading photos:', error);\n      setMessage('Failed to create album or upload photos. Please try again.');\n    } finally {\n      setUploading(false);\n    }\n  };\n\n  return (\n    <div style={{ padding: '20px', border: '1px solid #ccc', borderRadius: '8px', maxWidth: '500px' }}>\n      <h2>Create New Album with Photos</h2>\n      <form onSubmit={handleSubmit}>\n        <div style={{ marginBottom: '10px' }}>\n          <label htmlFor=\"albumName\">Album Name:</label><br />\n          <input\n            type=\"text\"\n            id=\"albumName\"\n            value={albumName}\n            onChange={handleAlbumNameChange}\n            disabled={uploading}\n            style={{ width: '100%', padding: '8px', boxSizing: 'border-box' }}\n            required\n          />\n        </div>\n        <div style={{ marginBottom: '10px' }}>\n          <label htmlFor=\"photos\">Select Photos:</label><br />\n          <input\n            type=\"file\"\n            id=\"photos\"\n            multiple\n            accept=\"image/*\"\n            onChange={handleFileChange}\n            disabled={uploading}\n            required\n          />\n        </div>\n        <button type=\"submit\" disabled={uploading} style={{ padding: '10px 20px' }}>\n          {uploading ? 'Uploading...' : 'Create Album'}\n        </button>\n      </form>\n      {message && <p style={{ marginTop: '10px' }}>{message}</p>}\n    </div>\n  );\n};\n\nexport default CreateAlbumWithPhotos;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}