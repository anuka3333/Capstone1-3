{"ast":null,"code":"var _jsxFileName = \"/Users/anukherlen/capstone1-3/src/components/AlbumForm.jsx\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport { createClient } from '@supabase/supabase-js';\nimport api from '../api';\nimport fetchClients from '../utils/clients';\nimport { useAuth0 } from '@auth0/auth0-react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst supabaseUrl = process.env.REACT_APP_SUPABASE_URL;\nconst supabaseAnonKey = process.env.REACT_APP_SUPABASE_ANON_KEY;\nconst supabaseBucket = process.env.REACT_APP_SUPABASE_BUCKET;\nconst supabase = createClient(supabaseUrl, supabaseAnonKey, {\n  realtime: {\n    enabled: false\n  }\n});\nconst AlbumForm = ({}) => {\n  _s();\n  const [albumName, setAlbumName] = useState('');\n  const [photos, setPhotos] = useState([]);\n  const [previews, setPreviews] = useState([]);\n  const [uploadedUrls, setUploadedUrls] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [albumLoading, setAlbumLoading] = useState(false);\n  const [users, setUsers] = useState([]);\n  const [clientId, setClientId] = useState('');\n  const [albumError, setAlbumError] = useState('');\n  const {\n    getAccessTokenSilently\n  } = useAuth0();\n  const handleAlbumSubmit = async e => {\n    e.preventDefault();\n    if (!albumName || !clientId) {\n      setAlbumError('Please provide both album name and select a client');\n      return;\n    }\n    try {\n      setAlbumLoading(true);\n      setAlbumError('');\n      const token = await getAccessTokenSilently({\n        audience: process.env.REACT_APP_AUTH0_AUDIENCE\n      });\n\n      // Call your backend API to create the album\n      await api.post('/api/albums', {\n        name: albumName,\n        clientId: clientId\n      }, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n\n      // Clear the form\n      setAlbumName('');\n      alert('Album created successfully!');\n    } catch (error) {\n      console.error('Error creating album:', error);\n      setAlbumError('Failed to create album. Please try again.');\n    } finally {\n      setAlbumLoading(false);\n    }\n  };\n\n  // Fetch users for admin dropdown\n  useEffect(() => {\n    async function fetchUsers() {\n      try {\n        let token;\n        try {\n          // prefer audience when configured for Auth0 API\n          token = await getAccessTokenSilently({\n            audience: process.env.REACT_APP_AUTH0_AUDIENCE\n          });\n        } catch (tErr) {\n          // token may fail when audience isn't configured; keep going to try unauthenticated fetch for debugging\n          console.warn('getAccessTokenSilently failed:', (tErr === null || tErr === void 0 ? void 0 : tErr.message) || tErr);\n        }\n        // Prefer fetching via the helper which will use configured API base or fallback URL\n        try {\n          const data = await fetchClients({\n            token\n          });\n          console.log('data:', data);\n          // helper returns either { users: [...] } or an array\n          if (Array.isArray(data)) setUsers(data);else if (data && data.users) setUsers(data.users);else if (data && data.clients) setUsers(data.clients);else setUsers([]);\n        } catch (err) {\n          console.warn('fetchClients failed, falling back to /auth/users:', err.message || err);\n          let res;\n          if (token) {\n            res = await api.get('/auth/users', {\n              headers: {\n                Authorization: `Bearer ${token}`\n              }\n            });\n          } else {\n            res = await api.get('/auth/users');\n          }\n          setUsers(res.data.users || res.data || []);\n        }\n      } catch (err) {\n        var _err$response;\n        console.error('Failed to fetch users:', (err === null || err === void 0 ? void 0 : (_err$response = err.response) === null || _err$response === void 0 ? void 0 : _err$response.data) || err.message || err);\n      }\n    }\n    fetchUsers();\n  }, [getAccessTokenSilently]);\n  const handlePhotoChange = e => {\n    const files = Array.from(e.target.files);\n    setPhotos(files);\n    setPreviews(files.map(file => URL.createObjectURL(file)));\n    setUploadedUrls([]); // reset uploaded URLs on new selection\n  };\n  const uploadFileToSupabase = async (file, clientId) => {\n    try {\n      // Create a unique file path, e.g. clientId/filename-timestamp.ext\n      const timestamp = Date.now();\n      const fileExt = file.name.split('.').pop();\n      const fileName = `${file.name.replace(/\\.[^/.]+$/, '')}-${timestamp}.${fileExt}`;\n      const filePath = `${clientId}/${fileName}`;\n      const {\n        data,\n        error\n      } = await supabase.storage.from(supabaseBucket).upload(filePath, file);\n      if (error) {\n        throw error;\n      }\n\n      // Get public URL\n      const {\n        publicURL,\n        error: urlError\n      } = supabase.storage.from(supabaseBucket).getPublicUrl(filePath);\n      if (urlError) {\n        throw urlError;\n      }\n      return publicURL;\n    } catch (error) {\n      console.error('Error uploading file to Supabase:', error);\n      throw error;\n    }\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (photos.length === 0 || !clientId) {\n      alert('Please select a client and at least one photo.');\n      return;\n    }\n    try {\n      setLoading(true);\n\n      // Upload each photo directly to Supabase Storage\n      const uploadPromises = photos.map(photo => uploadFileToSupabase(photo, clientId));\n      const urls = await Promise.all(uploadPromises);\n      setUploadedUrls(urls);\n      alert('Photos uploaded successfully.');\n\n      // Reset form inputs except client selection\n      setPhotos([]);\n      setPreviews([]);\n    } catch (error) {\n      console.error('Error uploading photos:', error);\n      alert('Error uploading photos. Please try again.');\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: '20px',\n        border: '1px solid #ccc',\n        padding: '15px',\n        borderRadius: '8px',\n        marginBottom: '20px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Create Album\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleAlbumSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginBottom: '10px'\n          },\n          children: /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"Select Client:\", /*#__PURE__*/_jsxDEV(\"select\", {\n              value: clientId,\n              onChange: e => setClientId(e.target.value),\n              required: true,\n              style: {\n                marginLeft: '10px'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"-- Select Client --\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 180,\n                columnNumber: 17\n              }, this), users.map(user => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: user.id || user.auth0_id || user.email,\n                children: user.name ? `${user.name} (${user.email || user.auth0_id || ''})` : user.email || user.auth0_id\n              }, user.id || user.auth0_id || user.email, false, {\n                fileName: _jsxFileName,\n                lineNumber: 182,\n                columnNumber: 19\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 179,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginBottom: '10px'\n          },\n          children: /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"Album Name:\", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: albumName,\n              onChange: e => setAlbumName(e.target.value),\n              required: true,\n              style: {\n                marginLeft: '10px'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 193,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 11\n        }, this), albumError && /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            color: 'red',\n            marginBottom: '10px'\n          },\n          children: albumError\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          disabled: albumLoading,\n          style: {\n            marginTop: '10px',\n            padding: '6px 12px'\n          },\n          children: albumLoading ? 'Creating...' : 'Create Album'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: '20px',\n        border: '1px solid #ccc',\n        padding: '15px',\n        borderRadius: '8px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Upload Photos\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginBottom: '10px'\n          },\n          children: /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"Select Client:\", /*#__PURE__*/_jsxDEV(\"select\", {\n              value: clientId,\n              onChange: e => setClientId(e.target.value),\n              required: true,\n              style: {\n                marginLeft: '10px'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"-- Select Client --\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 223,\n                columnNumber: 17\n              }, this), users.map(user => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: user.id || user.auth0_id || user.email,\n                children: user.name ? `${user.name} (${user.email || user.auth0_id || ''})` : user.email || user.auth0_id\n              }, user.id || user.auth0_id || user.email, false, {\n                fileName: _jsxFileName,\n                lineNumber: 225,\n                columnNumber: 19\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 222,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginTop: '10px'\n          },\n          children: /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"Upload Photos:\", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"file\",\n              multiple: true,\n              accept: \"image/*\",\n              onChange: handlePhotoChange,\n              style: {\n                marginLeft: '10px'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 236,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 234,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 11\n        }, this), previews.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginTop: '10px',\n            display: 'flex',\n            gap: '10px',\n            flexWrap: 'wrap'\n          },\n          children: previews.map((url, index) => /*#__PURE__*/_jsxDEV(\"img\", {\n            src: url,\n            alt: `Preview ${index}`,\n            style: {\n              width: '100px',\n              height: '100px',\n              objectFit: 'cover',\n              borderRadius: '5px'\n            }\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 249,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 13\n        }, this), uploadedUrls.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginTop: '10px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Uploaded Photos:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 256,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: 'flex',\n              gap: '10px',\n              flexWrap: 'wrap'\n            },\n            children: uploadedUrls.map((url, index) => /*#__PURE__*/_jsxDEV(\"img\", {\n              src: url,\n              alt: `Uploaded ${index}`,\n              style: {\n                width: '100px',\n                height: '100px',\n                objectFit: 'cover',\n                borderRadius: '5px'\n              }\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 259,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 257,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          disabled: loading,\n          style: {\n            marginTop: '10px',\n            padding: '6px 12px'\n          },\n          children: loading ? 'Uploading...' : 'Upload Photos'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 171,\n    columnNumber: 5\n  }, this);\n};\n_s(AlbumForm, \"UwL9ijSGWoj3S9ff2TK01KLWoNg=\", false, function () {\n  return [useAuth0];\n});\n_c = AlbumForm;\nexport default AlbumForm;\nvar _c;\n$RefreshReg$(_c, \"AlbumForm\");","map":{"version":3,"names":["useState","useEffect","createClient","api","fetchClients","useAuth0","jsxDEV","_jsxDEV","supabaseUrl","process","env","REACT_APP_SUPABASE_URL","supabaseAnonKey","REACT_APP_SUPABASE_ANON_KEY","supabaseBucket","REACT_APP_SUPABASE_BUCKET","supabase","realtime","enabled","AlbumForm","_s","albumName","setAlbumName","photos","setPhotos","previews","setPreviews","uploadedUrls","setUploadedUrls","loading","setLoading","albumLoading","setAlbumLoading","users","setUsers","clientId","setClientId","albumError","setAlbumError","getAccessTokenSilently","handleAlbumSubmit","e","preventDefault","token","audience","REACT_APP_AUTH0_AUDIENCE","post","name","headers","Authorization","alert","error","console","fetchUsers","tErr","warn","message","data","log","Array","isArray","clients","err","res","get","_err$response","response","handlePhotoChange","files","from","target","map","file","URL","createObjectURL","uploadFileToSupabase","timestamp","Date","now","fileExt","split","pop","fileName","replace","filePath","storage","upload","publicURL","urlError","getPublicUrl","handleSubmit","length","uploadPromises","photo","urls","Promise","all","children","style","marginTop","border","padding","borderRadius","marginBottom","_jsxFileName","lineNumber","columnNumber","onSubmit","value","onChange","required","marginLeft","user","id","auth0_id","email","type","color","disabled","multiple","accept","display","gap","flexWrap","url","index","src","alt","width","height","objectFit","_c","$RefreshReg$"],"sources":["/Users/anukherlen/capstone1-3/src/components/AlbumForm.jsx"],"sourcesContent":["import  { useState, useEffect } from 'react';\nimport { createClient } from '@supabase/supabase-js';\nimport api from '../api';\nimport fetchClients from '../utils/clients';\nimport { useAuth0 } from '@auth0/auth0-react';\n\nconst supabaseUrl = process.env.REACT_APP_SUPABASE_URL;\nconst supabaseAnonKey = process.env.REACT_APP_SUPABASE_ANON_KEY;\nconst supabaseBucket = process.env.REACT_APP_SUPABASE_BUCKET;\nconst supabase = createClient(supabaseUrl, supabaseAnonKey, {\n    realtime: { enabled: false }\n});\n\nconst AlbumForm = ({ }) => {\n  const [albumName, setAlbumName] = useState('');\n  const [photos, setPhotos] = useState([]);\n  const [previews, setPreviews] = useState([]);\n  const [uploadedUrls, setUploadedUrls] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [albumLoading, setAlbumLoading] = useState(false);\n  const [users, setUsers] = useState([]);\n  const [clientId, setClientId] = useState('');\n  const [albumError, setAlbumError] = useState('');\n\n  const { getAccessTokenSilently } = useAuth0();\n\n  const handleAlbumSubmit = async (e) => {\n    e.preventDefault();\n    if (!albumName || !clientId) {\n      setAlbumError('Please provide both album name and select a client');\n      return;\n    }\n\n    try {\n      setAlbumLoading(true);\n      setAlbumError('');\n\n      const token = await getAccessTokenSilently({\n        audience: process.env.REACT_APP_AUTH0_AUDIENCE,\n      });\n\n      // Call your backend API to create the album\n      await api.post('/api/albums', {\n        name: albumName,\n        clientId: clientId\n      }, {\n        headers: {\n          Authorization: `Bearer ${token}`,\n        },\n      });\n\n      // Clear the form\n      setAlbumName('');\n      alert('Album created successfully!');\n    } catch (error) {\n      console.error('Error creating album:', error);\n      setAlbumError('Failed to create album. Please try again.');\n    } finally {\n      setAlbumLoading(false);\n    }\n  };\n\n  // Fetch users for admin dropdown\n  useEffect(() => {\n    async function fetchUsers() {\n      try {\n        let token;\n        try {\n          // prefer audience when configured for Auth0 API\n          token = await getAccessTokenSilently({\n            audience: process.env.REACT_APP_AUTH0_AUDIENCE,\n          });\n        } catch (tErr) {\n          // token may fail when audience isn't configured; keep going to try unauthenticated fetch for debugging\n          console.warn('getAccessTokenSilently failed:', tErr?.message || tErr);\n        }\n        // Prefer fetching via the helper which will use configured API base or fallback URL\n        try {\n          const data = await fetchClients({ token });\n          console.log('data:', data);\n          // helper returns either { users: [...] } or an array\n          if (Array.isArray(data)) setUsers(data);\n          else if (data && data.users) setUsers(data.users);\n          else if (data && data.clients) setUsers(data.clients);\n          else setUsers([]);\n        } catch (err) {\n          console.warn('fetchClients failed, falling back to /auth/users:', err.message || err);\n          let res;\n          if (token) {\n            res = await api.get('/auth/users', { headers: { Authorization: `Bearer ${token}` } });\n          } else {\n            res = await api.get('/auth/users');\n          }\n          setUsers(res.data.users || res.data || []);\n        }\n      } catch (err) {\n        console.error('Failed to fetch users:', err?.response?.data || err.message || err);\n      }\n    }\n    fetchUsers();\n  }, [getAccessTokenSilently]);\n\n  const handlePhotoChange = (e) => {\n    const files = Array.from(e.target.files);\n    setPhotos(files);\n    setPreviews(files.map((file) => URL.createObjectURL(file)));\n    setUploadedUrls([]); // reset uploaded URLs on new selection\n  };\n  \n  const uploadFileToSupabase = async (file, clientId) => {\n    try {\n      // Create a unique file path, e.g. clientId/filename-timestamp.ext\n      const timestamp = Date.now();\n      const fileExt = file.name.split('.').pop();\n      const fileName = `${file.name.replace(/\\.[^/.]+$/, '')}-${timestamp}.${fileExt}`;\n      const filePath = `${clientId}/${fileName}`;\n      const { data, error } = await supabase.storage\n        .from(supabaseBucket)\n        .upload(filePath, file);\n\n      if (error) {\n        throw error;\n      }\n\n      // Get public URL\n      const { publicURL, error: urlError } = supabase.storage\n        .from(supabaseBucket)\n        .getPublicUrl(filePath);\n\n      if (urlError) {\n        throw urlError;\n      }\n\n      return publicURL;\n    } catch (error) {\n      console.error('Error uploading file to Supabase:', error);\n      throw error;\n    }\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    if (photos.length === 0 || !clientId) {\n      alert('Please select a client and at least one photo.');\n      return;\n    }\n\n    try {\n      setLoading(true);\n\n      // Upload each photo directly to Supabase Storage\n      const uploadPromises = photos.map(photo => uploadFileToSupabase(photo, clientId));\n\n      const urls = await Promise.all(uploadPromises);\n\n      setUploadedUrls(urls);\n      alert('Photos uploaded successfully.');\n\n      // Reset form inputs except client selection\n      setPhotos([]);\n      setPreviews([]);\n    } catch (error) {\n      console.error('Error uploading photos:', error);\n      alert('Error uploading photos. Please try again.');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <div>\n      {/* Upload Albums Form */}\n      <div style={{ marginTop: '20px', border: '1px solid #ccc', padding: '15px', borderRadius: '8px', marginBottom: '20px' }}>\n        <h2>Create Album</h2>\n        <form onSubmit={handleAlbumSubmit}>\n          <div style={{ marginBottom: '10px' }}>\n            <label>\n              Select Client:\n              <select value={clientId} onChange={e => setClientId(e.target.value)} required style={{ marginLeft: '10px' }}>\n                <option value=\"\">-- Select Client --</option>\n                {users.map(user => (\n                  <option key={user.id || user.auth0_id || user.email} value={user.id || user.auth0_id || user.email}>\n                    {user.name ? `${user.name} (${user.email || user.auth0_id || ''})` : (user.email || user.auth0_id)}\n                  </option>\n                ))}\n              </select>\n            </label>\n          </div>\n          \n          <div style={{ marginBottom: '10px' }}>\n            <label>\n              Album Name:\n              <input\n                type=\"text\"\n                value={albumName}\n                onChange={e => setAlbumName(e.target.value)}\n                required\n                style={{ marginLeft: '10px' }}\n              />\n            </label>\n          </div>\n\n          {albumError && (\n            <div style={{ color: 'red', marginBottom: '10px' }}>\n              {albumError}\n            </div>\n          )}\n\n          <button type=\"submit\" disabled={albumLoading} style={{ marginTop: '10px', padding: '6px 12px' }}>\n            {albumLoading ? 'Creating...' : 'Create Album'}\n          </button>\n        </form>\n      </div>\n\n      {/* Upload Photos Form */}\n      <div style={{ marginTop: '20px', border: '1px solid #ccc', padding: '15px', borderRadius: '8px' }}>\n        <h2>Upload Photos</h2>\n        <form onSubmit={handleSubmit}>\n          <div style={{ marginBottom: '10px' }}>\n            <label>\n              Select Client:\n              <select value={clientId} onChange={e => setClientId(e.target.value)} required style={{ marginLeft: '10px' }}>\n                <option value=\"\">-- Select Client --</option>\n                {users.map(user => (\n                  <option key={user.id || user.auth0_id || user.email} value={user.id || user.auth0_id || user.email}>\n                    {user.name ? `${user.name} (${user.email || user.auth0_id || ''})` : (user.email || user.auth0_id)}\n                  </option>\n                ))}\n              </select>\n            </label>\n          </div>\n\n          <div style={{ marginTop: '10px' }}>\n            <label>\n              Upload Photos:\n              <input\n                type=\"file\"\n                multiple\n                accept=\"image/*\"\n                onChange={handlePhotoChange}\n                style={{ marginLeft: '10px' }}\n              />\n            </label>\n          </div>\n\n          {previews.length > 0 && (\n            <div style={{ marginTop: '10px', display: 'flex', gap: '10px', flexWrap: 'wrap' }}>\n              {previews.map((url, index) => (\n                <img key={index} src={url} alt={`Preview ${index}`} style={{ width: '100px', height: '100px', objectFit: 'cover', borderRadius: '5px' }} />\n              ))}\n            </div>\n          )}\n\n          {uploadedUrls.length > 0 && (\n            <div style={{ marginTop: '10px' }}>\n              <h3>Uploaded Photos:</h3>\n              <div style={{ display: 'flex', gap: '10px', flexWrap: 'wrap' }}>\n                {uploadedUrls.map((url, index) => (\n                  <img key={index} src={url} alt={`Uploaded ${index}`} style={{ width: '100px', height: '100px', objectFit: 'cover', borderRadius: '5px' }} />\n                ))}\n              </div>\n            </div>\n          )}\n\n          <button type=\"submit\" disabled={loading} style={{ marginTop: '10px', padding: '6px 12px' }}>\n            {loading ? 'Uploading...' : 'Upload Photos'}\n          </button>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default AlbumForm;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}