{"ast":null,"code":"var _jsxFileName = \"/Users/anukherlen/capstone1-3/src/components/AlbumForm.jsx\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport { createClient } from '@supabase/supabase-js';\nimport api from '../api';\nimport fetchClients from '../utils/clients';\nimport { useAuth0 } from '@auth0/auth0-react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst supabaseUrl = process.env.REACT_APP_SUPABASE_URL;\nconst supabaseAnonKey = process.env.REACT_APP_SUPABASE_ANON_KEY;\nconst supabase = createClient(supabaseUrl, supabaseAnonKey);\nconst AlbumForm = ({}) => {\n  _s();\n  const [albumName, setAlbumName] = useState('');\n  const [photos, setPhotos] = useState([]);\n  const [previews, setPreviews] = useState([]);\n  const [uploadedUrls, setUploadedUrls] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [users, setUsers] = useState([]);\n  const [clientId, setClientId] = useState('');\n  const {\n    getAccessTokenSilently\n  } = useAuth0();\n\n  // Fetch users for admin dropdown\n  useEffect(() => {\n    async function fetchUsers() {\n      try {\n        let token;\n        try {\n          // prefer audience when configured for Auth0 API\n          token = await getAccessTokenSilently({\n            audience: process.env.REACT_APP_AUTH0_AUDIENCE\n          });\n        } catch (tErr) {\n          // token may fail when audience isn't configured; keep going to try unauthenticated fetch for debugging\n          console.warn('getAccessTokenSilently failed:', (tErr === null || tErr === void 0 ? void 0 : tErr.message) || tErr);\n        }\n        // Prefer fetching via the helper which will use configured API base or fallback URL\n        try {\n          const data = await fetchClients({\n            token\n          });\n          console.log('data:', data);\n          // helper returns either { users: [...] } or an array\n          if (Array.isArray(data)) setUsers(data);else if (data && data.users) setUsers(data.users);else if (data && data.clients) setUsers(data.clients);else setUsers([]);\n        } catch (err) {\n          console.warn('fetchClients failed, falling back to /auth/users:', err.message || err);\n          let res;\n          if (token) {\n            res = await api.get('/auth/users', {\n              headers: {\n                Authorization: `Bearer ${token}`\n              }\n            });\n          } else {\n            res = await api.get('/auth/users');\n          }\n          setUsers(res.data.users || res.data || []);\n        }\n      } catch (err) {\n        var _err$response;\n        console.error('Failed to fetch users:', (err === null || err === void 0 ? void 0 : (_err$response = err.response) === null || _err$response === void 0 ? void 0 : _err$response.data) || err.message || err);\n      }\n    }\n    fetchUsers();\n  }, [getAccessTokenSilently]);\n  const handlePhotoChange = e => {\n    const files = Array.from(e.target.files);\n    setPhotos(files);\n    setPreviews(files.map(file => URL.createObjectURL(file)));\n    setUploadedUrls([]); // reset uploaded URLs on new selection\n  };\n  const uploadFileToSupabase = async (file, clientId) => {\n    try {\n      // Create a unique file path, e.g. clientId/filename-timestamp.ext\n      const timestamp = Date.now();\n      const fileExt = file.name.split('.').pop();\n      const fileName = `${file.name.replace(/\\.[^/.]+$/, '')}-${timestamp}.${fileExt}`;\n      const filePath = `${clientId}/${fileName}`;\n      const {\n        data,\n        error\n      } = await supabase.storage.from('photos').upload(filePath, file);\n      if (error) {\n        throw error;\n      }\n\n      // Get public URL\n      const {\n        publicURL,\n        error: urlError\n      } = supabase.storage.from('photos').getPublicUrl(filePath);\n      if (urlError) {\n        throw urlError;\n      }\n      return publicURL;\n    } catch (error) {\n      console.error('Error uploading file to Supabase:', error);\n      throw error;\n    }\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (photos.length === 0 || !clientId) {\n      alert('Please select a client and at least one photo.');\n      return;\n    }\n    try {\n      setLoading(true);\n\n      // Upload each photo directly to Supabase Storage\n      const uploadPromises = photos.map(photo => uploadFileToSupabase(photo, clientId));\n      const urls = await Promise.all(uploadPromises);\n      setUploadedUrls(urls);\n      alert('Photos uploaded successfully.');\n\n      // Reset form inputs except client selection\n      setPhotos([]);\n      setPreviews([]);\n    } catch (error) {\n      console.error('Error uploading photos:', error);\n      alert('Error uploading photos. Please try again.');\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      marginTop: '20px',\n      border: '1px solid #ccc',\n      padding: '15px',\n      borderRadius: '8px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Upload Photos\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginBottom: '10px'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Select Client:\", /*#__PURE__*/_jsxDEV(\"select\", {\n            value: clientId,\n            onChange: e => setClientId(e.target.value),\n            required: true,\n            style: {\n              marginLeft: '10px'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"-- Select Client --\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 15\n            }, this), users.map(user => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: user.id || user.auth0_id || user.email,\n              children: user.name ? `${user.name} (${user.email || user.auth0_id || ''})` : user.email || user.auth0_id\n            }, user.id || user.auth0_id || user.email, false, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 17\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginTop: '10px'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Upload Photos:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            multiple: true,\n            accept: \"image/*\",\n            onChange: handlePhotoChange,\n            style: {\n              marginLeft: '10px'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 9\n      }, this), previews.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginTop: '10px',\n          display: 'flex',\n          gap: '10px',\n          flexWrap: 'wrap'\n        },\n        children: previews.map((url, index) => /*#__PURE__*/_jsxDEV(\"img\", {\n          src: url,\n          alt: `Preview ${index}`,\n          style: {\n            width: '100px',\n            height: '100px',\n            objectFit: 'cover',\n            borderRadius: '5px'\n          }\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 11\n      }, this), uploadedUrls.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginTop: '10px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Uploaded Photos:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex',\n            gap: '10px',\n            flexWrap: 'wrap'\n          },\n          children: uploadedUrls.map((url, index) => /*#__PURE__*/_jsxDEV(\"img\", {\n            src: url,\n            alt: `Uploaded ${index}`,\n            style: {\n              width: '100px',\n              height: '100px',\n              objectFit: 'cover',\n              borderRadius: '5px'\n            }\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        disabled: loading,\n        style: {\n          marginTop: '10px',\n          padding: '6px 12px'\n        },\n        children: loading ? 'Uploading...' : 'Upload Photos'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 131,\n    columnNumber: 5\n  }, this);\n};\n_s(AlbumForm, \"t4hOWeNgDjELhvIS9ePVUZTkN6c=\", false, function () {\n  return [useAuth0];\n});\n_c = AlbumForm;\nexport default AlbumForm;\nvar _c;\n$RefreshReg$(_c, \"AlbumForm\");","map":{"version":3,"names":["useState","useEffect","createClient","api","fetchClients","useAuth0","jsxDEV","_jsxDEV","supabaseUrl","process","env","REACT_APP_SUPABASE_URL","supabaseAnonKey","REACT_APP_SUPABASE_ANON_KEY","supabase","AlbumForm","_s","albumName","setAlbumName","photos","setPhotos","previews","setPreviews","uploadedUrls","setUploadedUrls","loading","setLoading","users","setUsers","clientId","setClientId","getAccessTokenSilently","fetchUsers","token","audience","REACT_APP_AUTH0_AUDIENCE","tErr","console","warn","message","data","log","Array","isArray","clients","err","res","get","headers","Authorization","_err$response","error","response","handlePhotoChange","e","files","from","target","map","file","URL","createObjectURL","uploadFileToSupabase","timestamp","Date","now","fileExt","name","split","pop","fileName","replace","filePath","storage","upload","publicURL","urlError","getPublicUrl","handleSubmit","preventDefault","length","alert","uploadPromises","photo","urls","Promise","all","style","marginTop","border","padding","borderRadius","children","_jsxFileName","lineNumber","columnNumber","onSubmit","marginBottom","value","onChange","required","marginLeft","user","id","auth0_id","email","type","multiple","accept","display","gap","flexWrap","url","index","src","alt","width","height","objectFit","disabled","_c","$RefreshReg$"],"sources":["/Users/anukherlen/capstone1-3/src/components/AlbumForm.jsx"],"sourcesContent":["import  { useState, useEffect } from 'react';\nimport { createClient } from '@supabase/supabase-js';\nimport api from '../api';\nimport fetchClients from '../utils/clients';\nimport { useAuth0 } from '@auth0/auth0-react';\n\nconst supabaseUrl = process.env.REACT_APP_SUPABASE_URL;\nconst supabaseAnonKey = process.env.REACT_APP_SUPABASE_ANON_KEY;\nconst supabase = createClient(supabaseUrl, supabaseAnonKey);\n\nconst AlbumForm = ({ }) => {\n  const [albumName, setAlbumName] = useState('');\n  const [photos, setPhotos] = useState([]);\n  const [previews, setPreviews] = useState([]);\n  const [uploadedUrls, setUploadedUrls] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [users, setUsers] = useState([]);\n  const [clientId, setClientId] = useState('');\n\n  const { getAccessTokenSilently } = useAuth0();\n\n  // Fetch users for admin dropdown\n  useEffect(() => {\n    async function fetchUsers() {\n      try {\n        let token;\n        try {\n          // prefer audience when configured for Auth0 API\n          token = await getAccessTokenSilently({\n            audience: process.env.REACT_APP_AUTH0_AUDIENCE,\n          });\n        } catch (tErr) {\n          // token may fail when audience isn't configured; keep going to try unauthenticated fetch for debugging\n          console.warn('getAccessTokenSilently failed:', tErr?.message || tErr);\n        }\n        // Prefer fetching via the helper which will use configured API base or fallback URL\n        try {\n          const data = await fetchClients({ token });\n          console.log('data:', data);\n          // helper returns either { users: [...] } or an array\n          if (Array.isArray(data)) setUsers(data);\n          else if (data && data.users) setUsers(data.users);\n          else if (data && data.clients) setUsers(data.clients);\n          else setUsers([]);\n        } catch (err) {\n          console.warn('fetchClients failed, falling back to /auth/users:', err.message || err);\n          let res;\n          if (token) {\n            res = await api.get('/auth/users', { headers: { Authorization: `Bearer ${token}` } });\n          } else {\n            res = await api.get('/auth/users');\n          }\n          setUsers(res.data.users || res.data || []);\n        }\n      } catch (err) {\n        console.error('Failed to fetch users:', err?.response?.data || err.message || err);\n      }\n    }\n    fetchUsers();\n  }, [getAccessTokenSilently]);\n\n  const handlePhotoChange = (e) => {\n    const files = Array.from(e.target.files);\n    setPhotos(files);\n    setPreviews(files.map((file) => URL.createObjectURL(file)));\n    setUploadedUrls([]); // reset uploaded URLs on new selection\n  };\n\n  const uploadFileToSupabase = async (file, clientId) => {\n    try {\n      // Create a unique file path, e.g. clientId/filename-timestamp.ext\n      const timestamp = Date.now();\n      const fileExt = file.name.split('.').pop();\n      const fileName = `${file.name.replace(/\\.[^/.]+$/, '')}-${timestamp}.${fileExt}`;\n      const filePath = `${clientId}/${fileName}`;\n\n      const { data, error } = await supabase.storage\n        .from('photos')\n        .upload(filePath, file);\n\n      if (error) {\n        throw error;\n      }\n\n      // Get public URL\n      const { publicURL, error: urlError } = supabase.storage\n        .from('photos')\n        .getPublicUrl(filePath);\n\n      if (urlError) {\n        throw urlError;\n      }\n\n      return publicURL;\n    } catch (error) {\n      console.error('Error uploading file to Supabase:', error);\n      throw error;\n    }\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    if (photos.length === 0 || !clientId) {\n      alert('Please select a client and at least one photo.');\n      return;\n    }\n\n    try {\n      setLoading(true);\n\n      // Upload each photo directly to Supabase Storage\n      const uploadPromises = photos.map(photo => uploadFileToSupabase(photo, clientId));\n\n      const urls = await Promise.all(uploadPromises);\n\n      setUploadedUrls(urls);\n      alert('Photos uploaded successfully.');\n\n      // Reset form inputs except client selection\n      setPhotos([]);\n      setPreviews([]);\n    } catch (error) {\n      console.error('Error uploading photos:', error);\n      alert('Error uploading photos. Please try again.');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <div style={{ marginTop: '20px', border: '1px solid #ccc', padding: '15px', borderRadius: '8px' }}>\n      <h2>Upload Photos</h2>\n      <form onSubmit={handleSubmit}>\n        <div style={{ marginBottom: '10px' }}>\n          <label>\n            Select Client:\n            <select value={clientId} onChange={e => setClientId(e.target.value)} required style={{ marginLeft: '10px' }}>\n              <option value=\"\">-- Select Client --</option>\n              {users.map(user => (\n                <option key={user.id || user.auth0_id || user.email} value={user.id || user.auth0_id || user.email}>\n                  {user.name ? `${user.name} (${user.email || user.auth0_id || ''})` : (user.email || user.auth0_id)}\n                </option>\n              ))}\n            </select>\n          </label>\n        </div>\n\n        <div style={{ marginTop: '10px' }}>\n          <label>\n            Upload Photos:\n            <input\n              type=\"file\"\n              multiple\n              accept=\"image/*\"\n              onChange={handlePhotoChange}\n              style={{ marginLeft: '10px' }}\n            />\n          </label>\n        </div>\n\n        {previews.length > 0 && (\n          <div style={{ marginTop: '10px', display: 'flex', gap: '10px', flexWrap: 'wrap' }}>\n            {previews.map((url, index) => (\n              <img key={index} src={url} alt={`Preview ${index}`} style={{ width: '100px', height: '100px', objectFit: 'cover', borderRadius: '5px' }} />\n            ))}\n          </div>\n        )}\n\n        {uploadedUrls.length > 0 && (\n          <div style={{ marginTop: '10px' }}>\n            <h3>Uploaded Photos:</h3>\n            <div style={{ display: 'flex', gap: '10px', flexWrap: 'wrap' }}>\n              {uploadedUrls.map((url, index) => (\n                <img key={index} src={url} alt={`Uploaded ${index}`} style={{ width: '100px', height: '100px', objectFit: 'cover', borderRadius: '5px' }} />\n              ))}\n            </div>\n          </div>\n        )}\n\n        <button type=\"submit\" disabled={loading} style={{ marginTop: '10px', padding: '6px 12px' }}>\n          {loading ? 'Uploading...' : 'Upload Photos'}\n        </button>\n      </form>\n    </div>\n  );\n};\n\nexport default AlbumForm;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}