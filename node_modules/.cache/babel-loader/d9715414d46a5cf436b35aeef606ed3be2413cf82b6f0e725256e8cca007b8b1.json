{"ast":null,"code":"var _jsxFileName = \"/Users/anukherlen/capstone1-3/src/components/AlbumForm.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport api from '../api';\nimport { useAuth0 } from '@auth0/auth0-react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AlbumForm = ({\n  onAlbumCreated\n}) => {\n  _s();\n  const [albumName, setAlbumName] = useState('');\n  const [photos, setPhotos] = useState([]);\n  const [previews, setPreviews] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [users, setUsers] = useState([]);\n  const [clientAuth0Id, setClientAuth0Id] = useState('');\n  const {\n    getAccessTokenSilently\n  } = useAuth0();\n\n  // Fetch users for admin dropdown\n  useEffect(() => {\n    async function fetchUsers() {\n      try {\n        var _res, _res$data;\n        // Try to obtain an access token (may fail if audience not configured)\n        let token;\n        try {\n          token = await getAccessTokenSilently({\n            audience: process.env.REACT_APP_AUTH0_AUDIENCE\n          });\n        } catch (tErr) {\n          console.warn('getAccessTokenSilently failed:', (tErr === null || tErr === void 0 ? void 0 : tErr.message) || tErr);\n        }\n\n        // In development, call the localhost backend directly to avoid host/proxy issues.\n        const backendUrl = process.env.NODE_ENV === 'development' ? 'http://localhost:5001' : '';\n        const usersEndpoint = backendUrl ? `${backendUrl}/auth/users` : '/auth/users';\n        let res;\n        if (token) {\n          res = await axios.get(usersEndpoint, {\n            headers: {\n              Authorization: `Bearer ${token}`\n            }\n          });\n        } else {\n          // fallback: try unauthenticated call (useful when backend route is public or for debugging path issues)\n          console.warn('No token available \u0012 attempting unauthenticated request to /auth/users');\n          res = await axios.get(usersEndpoint);\n        }\n        console.log('users response:', (_res = res) === null || _res === void 0 ? void 0 : _res.data);\n        const usersArr = ((_res$data = res.data) === null || _res$data === void 0 ? void 0 : _res$data.users) || res.data || [];\n        setUsers(usersArr);\n        console.log('users state set (count):', usersArr.length, usersArr.slice(0, 5));\n      } catch (err) {\n        var _err$response;\n        console.error('Failed to fetch users:', (err === null || err === void 0 ? void 0 : (_err$response = err.response) === null || _err$response === void 0 ? void 0 : _err$response.data) || err.message || err);\n      }\n    }\n    fetchUsers();\n  }, [getAccessTokenSilently]);\n  const handlePhotoChange = e => {\n    const files = Array.from(e.target.files);\n    setPhotos(files);\n    setPreviews(files.map(file => URL.createObjectURL(file)));\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!albumName || photos.length === 0 || !clientAuth0Id) {\n      alert('Please provide album name, select a client, and at least one photo.');\n      return;\n    }\n    const formData = new FormData();\n    formData.append('albumName', albumName);\n    formData.append('clientAuth0Id', clientAuth0Id);\n    photos.forEach(photo => formData.append('photos', photo));\n    try {\n      setLoading(true);\n      const token = await getAccessTokenSilently({\n        audience: process.env.REACT_APP_AUTH0_AUDIENCE\n      });\n\n      // 1) Create album record (JSON body)\n      const createRes = await api.post('/api/albums/create', {\n        albumName,\n        clientAuth0Id\n      }, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      const albumId = createRes.data.albumId || createRes.data.id;\n      console.log('Album created:', createRes.data);\n\n      // 2) Upload each photo to the album using the upload endpoint\n      const uploadPromises = photos.map(photo => {\n        const fd = new FormData();\n        fd.append('file', photo);\n        return api.post(`/api/albums/${albumId}/upload`, fd, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n      });\n      const uploadResults = await Promise.all(uploadPromises);\n      console.log('Uploaded photos:', uploadResults.map(r => r.data));\n      onAlbumCreated(); // refresh albums list\n\n      // Reset form\n      setAlbumName('');\n      setPhotos([]);\n      setPreviews([]);\n      setClientAuth0Id('');\n    } catch (error) {\n      console.error('Error creating album:', error);\n      alert('Error creating album.');\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      marginTop: '20px',\n      border: '1px solid #ccc',\n      padding: '15px',\n      borderRadius: '8px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Create New Album\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginBottom: '10px'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Select Client:\", /*#__PURE__*/_jsxDEV(\"select\", {\n            value: clientAuth0Id,\n            onChange: e => setClientAuth0Id(e.target.value),\n            required: true,\n            style: {\n              marginLeft: '10px'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"-- Select Client --\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 15\n            }, this), users.map(user => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: user.auth0_id || user.id,\n              children: [user.name, \" (\", user.email, \") \", user.auth0_id ? ` â€” ${user.auth0_id}` : '']\n            }, user.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 17\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Album Name:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: albumName,\n            onChange: e => setAlbumName(e.target.value),\n            required: true,\n            style: {\n              marginLeft: '10px'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginTop: '10px'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Upload Photos:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            multiple: true,\n            accept: \"image/*\",\n            onChange: handlePhotoChange,\n            style: {\n              marginLeft: '10px'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 9\n      }, this), previews.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginTop: '10px',\n          display: 'flex',\n          gap: '10px',\n          flexWrap: 'wrap'\n        },\n        children: previews.map((url, index) => /*#__PURE__*/_jsxDEV(\"img\", {\n          src: url,\n          alt: `Preview ${index}`,\n          style: {\n            width: '100px',\n            height: '100px',\n            objectFit: 'cover',\n            borderRadius: '5px'\n          }\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        disabled: loading,\n        style: {\n          marginTop: '10px',\n          padding: '6px 12px'\n        },\n        children: loading ? 'Uploading...' : 'Create Album'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 114,\n    columnNumber: 5\n  }, this);\n};\n_s(AlbumForm, \"PGOa+JdzymNyF2zfRXMeK/AIcJQ=\", false, function () {\n  return [useAuth0];\n});\n_c = AlbumForm;\nexport default AlbumForm;\nvar _c;\n$RefreshReg$(_c, \"AlbumForm\");","map":{"version":3,"names":["React","useState","useEffect","axios","api","useAuth0","jsxDEV","_jsxDEV","AlbumForm","onAlbumCreated","_s","albumName","setAlbumName","photos","setPhotos","previews","setPreviews","loading","setLoading","users","setUsers","clientAuth0Id","setClientAuth0Id","getAccessTokenSilently","fetchUsers","_res","_res$data","token","audience","process","env","REACT_APP_AUTH0_AUDIENCE","tErr","console","warn","message","backendUrl","NODE_ENV","usersEndpoint","res","get","headers","Authorization","log","data","usersArr","length","slice","err","_err$response","error","response","handlePhotoChange","e","files","Array","from","target","map","file","URL","createObjectURL","handleSubmit","preventDefault","alert","formData","FormData","append","forEach","photo","createRes","post","albumId","id","uploadPromises","fd","uploadResults","Promise","all","r","style","marginTop","border","padding","borderRadius","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","marginBottom","value","onChange","required","marginLeft","user","auth0_id","name","email","type","multiple","accept","display","gap","flexWrap","url","index","src","alt","width","height","objectFit","disabled","_c","$RefreshReg$"],"sources":["/Users/anukherlen/capstone1-3/src/components/AlbumForm.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport api from '../api';\nimport { useAuth0 } from '@auth0/auth0-react';\n\nconst AlbumForm = ({ onAlbumCreated }) => {\n  const [albumName, setAlbumName] = useState('');\n  const [photos, setPhotos] = useState([]);\n  const [previews, setPreviews] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [users, setUsers] = useState([]);\n  const [clientAuth0Id, setClientAuth0Id] = useState('');\n\n  const { getAccessTokenSilently } = useAuth0();\n\n  // Fetch users for admin dropdown\n  useEffect(() => {\n    async function fetchUsers() {\n      try {\n        // Try to obtain an access token (may fail if audience not configured)\n        let token;\n        try {\n          token = await getAccessTokenSilently({ audience: process.env.REACT_APP_AUTH0_AUDIENCE });\n        } catch (tErr) {\n          console.warn('getAccessTokenSilently failed:', tErr?.message || tErr);\n        }\n\n        // In development, call the localhost backend directly to avoid host/proxy issues.\n        const backendUrl = (process.env.NODE_ENV === 'development') ? 'http://localhost:5001' : '';\n        const usersEndpoint = backendUrl ? `${backendUrl}/auth/users` : '/auth/users';\n\n        let res;\n        if (token) {\n          res = await axios.get(usersEndpoint, {\n            headers: { Authorization: `Bearer ${token}` },\n          });\n        } else {\n          // fallback: try unauthenticated call (useful when backend route is public or for debugging path issues)\n          console.warn('No token available \u0012 attempting unauthenticated request to /auth/users');\n          res = await axios.get(usersEndpoint);\n        }\n\n        console.log('users response:', res?.data);\n        const usersArr = res.data?.users || res.data || [];\n        setUsers(usersArr);\n        console.log('users state set (count):', usersArr.length, usersArr.slice(0,5));\n      } catch (err) {\n        console.error('Failed to fetch users:', err?.response?.data || err.message || err);\n      }\n    }\n\n    fetchUsers();\n  }, [getAccessTokenSilently]);\n\n  const handlePhotoChange = (e) => {\n    const files = Array.from(e.target.files);\n    setPhotos(files);\n    setPreviews(files.map((file) => URL.createObjectURL(file)));\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n  if (!albumName || photos.length === 0 || !clientAuth0Id) {\n      alert('Please provide album name, select a client, and at least one photo.');\n      return;\n    }\n\n    const formData = new FormData();\n    formData.append('albumName', albumName);\n  formData.append('clientAuth0Id', clientAuth0Id);\n    photos.forEach((photo) => formData.append('photos', photo));\n\n    try {\n      setLoading(true);\n      const token = await getAccessTokenSilently({ audience: process.env.REACT_APP_AUTH0_AUDIENCE });\n\n      // 1) Create album record (JSON body)\n      const createRes = await api.post(\n        '/api/albums/create',\n        { albumName, clientAuth0Id },\n        { headers: { Authorization: `Bearer ${token}` } }\n      );\n      const albumId = createRes.data.albumId || createRes.data.id;\n      console.log('Album created:', createRes.data);\n\n      // 2) Upload each photo to the album using the upload endpoint\n      const uploadPromises = photos.map((photo) => {\n        const fd = new FormData();\n        fd.append('file', photo);\n        return api.post(`/api/albums/${albumId}/upload`, fd, {\n          headers: { Authorization: `Bearer ${token}` },\n        });\n      });\n\n      const uploadResults = await Promise.all(uploadPromises);\n      console.log('Uploaded photos:', uploadResults.map(r => r.data));\n\n      onAlbumCreated(); // refresh albums list\n\n      // Reset form\n      setAlbumName('');\n      setPhotos([]);\n      setPreviews([]);\n  setClientAuth0Id('');\n    } catch (error) {\n      console.error('Error creating album:', error);\n      alert('Error creating album.');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <div style={{ marginTop: '20px', border: '1px solid #ccc', padding: '15px', borderRadius: '8px' }}>\n      <h2>Create New Album</h2>\n      <form onSubmit={handleSubmit}>\n        <div style={{ marginBottom: '10px' }}>\n          <label>\n            Select Client:\n            <select value={clientAuth0Id} onChange={e => setClientAuth0Id(e.target.value)} required style={{ marginLeft: '10px' }}>\n              <option value=\"\">-- Select Client --</option>\n              {users.map(user => (\n                <option key={user.id} value={user.auth0_id || user.id}>\n                  {user.name} ({user.email}) {user.auth0_id ? ` â€” ${user.auth0_id}` : ''}\n                </option>\n              ))}\n            </select>\n          </label>\n        </div>\n        <div>\n          <label>\n            Album Name:\n            <input\n              type=\"text\"\n              value={albumName}\n              onChange={(e) => setAlbumName(e.target.value)}\n              required\n              style={{ marginLeft: '10px' }}\n            />\n          </label>\n        </div>\n\n        <div style={{ marginTop: '10px' }}>\n          <label>\n            Upload Photos:\n            <input\n              type=\"file\"\n              multiple\n              accept=\"image/*\"\n              onChange={handlePhotoChange}\n              style={{ marginLeft: '10px' }}\n            />\n          </label>\n        </div>\n\n        {previews.length > 0 && (\n          <div style={{ marginTop: '10px', display: 'flex', gap: '10px', flexWrap: 'wrap' }}>\n            {previews.map((url, index) => (\n              <img key={index} src={url} alt={`Preview ${index}`} style={{ width: '100px', height: '100px', objectFit: 'cover', borderRadius: '5px' }} />\n            ))}\n          </div>\n        )}\n\n        <button type=\"submit\" disabled={loading} style={{ marginTop: '10px', padding: '6px 12px' }}>\n          {loading ? 'Uploading...' : 'Create Album'}\n        </button>\n      </form>\n    </div>\n  );\n};\n\nexport default AlbumForm;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}